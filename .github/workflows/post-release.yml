name: Post-Release Process

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build-and-push-release:
    strategy:
      matrix:
        microservice: [react, angular, dotnet]
    
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set build context, Dockerfile and Repo
        id: vars
        uses: ./.github/actions/set-var
        with:
          microservice: ${{ matrix.microservice }}
          docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract version from branch name
        id: extract_version
        run: |
          VERSION=$(echo "${{ github.head_ref }}" | sed 's/release\///')
          echo "TAG_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ${{ env.REPO }}:${{ env.TAG_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  create-github-release:
    runs-on: ubuntu-latest
    needs: build-and-push-release
    permissions:
      contents: write    
    
    if: success()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set release variables
        id: vars
        run: |
          VERSION=$(echo "${{ github.head_ref }}" | sed 's/release\/v//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" >> $GITHUB_ENV
          
      - name: Create Git Tag
        run: |
          TAG_NAME="v${{ env.VERSION }}"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
          
      - name: Generate Changelog
        id: changelog
        run: |
          VERSION="${{ env.VERSION }}"
          LAST_TAG=$(git describe --tags --abbrev=0 --exclude="v$VERSION" 2>/dev/null || echo "")
          
          if [ -z "$LAST_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges | head -10)
          else
            CHANGELOG=$(git log "$LAST_TAG..HEAD" --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          {
            echo "CHANGELOG<<EOF"
            echo "$CHANGELOG"
            echo "EOF"
          } >> "$GITHUB_ENV"
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "Release v${{ env.VERSION }}"
          body: |
            ## Release v${{ env.VERSION }}
            
            ### Docker Images
            - `${{ env.DOCKER_HUB_USERNAME }}/react:v${{ env.VERSION }}`
            - `${{ env.DOCKER_HUB_USERNAME }}/angular:v${{ env.VERSION }}`
            - `${{ env.DOCKER_HUB_USERNAME }}/dotnet:v${{ env.VERSION }}`
            
            ### Changes
            ${{ env.CHANGELOG }}
            
            ### Services Updated
            All microservices have been updated to version v${{ env.VERSION }}
          draft: false
          prerelease: false
